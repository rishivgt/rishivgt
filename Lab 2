## Lab 02

- Name:Rishiv Tadiparthi
- Email:tadiparthi.7@wright.edu

## Part 1 Answersw

Full / absolute path to your private key file: C:\Users\rishi\Downloads\aws-keys\awskey.pem

Command to SSH to AWS instance:

```
[ssh -i "C:\Users\rishi\Downloads\aws-keys\awskey.pem" ubuntu@3.91.123.45]
```

## Part 2 Answers

1. `chmod u+r bubbles.txt`
    - Means: For bubbles.txt it allows the user(u) to read(r).
    - Assessment: You should use the command because it keeps your data safe and only allows the user to read the file. This helps to maintain security,by ensuring that only the user can see what is in the bubbles.txt ile. The command changes the file's mode by adding read access for the owner without affecting others. If other users don't have write access, then this prevents them from getting it and prevents them from changing your data.
2. `chmod u=rw,g-w,o-x banana.cabana`
    - Means: For banana.cabana it allows the user to user to read and write,it removes the write permission from the group,it removes the execute permission for others.
    - Assessment: Even though this command allows the user to read and write, this is not the best command to use because no one can just write anything into the file seperataly and no one,other than the user, is able to execute the banana.cabana command.
3. `chmod a=w snow.md`
    - Means: 
    - Assessment:
4. `chmod 751 program`
    - Means: 
    - Assessment:
5. `chmod -R ug+w share`
    - Means: 
    - Assessment:

## Part 3 Answers

1. Command to create new user: 
2. Path to new user's home directory: 
3. Evaluate if `ubuntu` can add files to new user's home directory:
4. Command to switch to new user:
5. Command(s) to go to new user's home directory:
6. Evaluate if new user can add files to user's home directory:
7. Command to return to `ubuntu` user:
8. Command to return to `ubuntu` home directory: 

## Part 4 Answers

1. Command(s) to create group named `squad` and add members:
2. Command(s) to add `ubuntu` & user to group `squad`:
3. Command(s) to allow `squad` to view the `ubuntu` user's home directory contents:
4. Command(s) to modify `share` to have group ownership of `squad`:
5. Describe your tests and commands with the user account:
6. Describe the full set of permissions / settings that enable the user to make edits:

## Part 5 Answers

For each, write the command used or answer the question posed.

1. Command(s) to make file using `sudo`: 
2. Command(s) to make file with `root`:
3. Describe / compare ownership and permissions of files:
4. Which account can do what actions? (Type Y or N in columns)

Contents inside of `share`
| Account   | Can View  | Can Edit  | Can Change Permissions    |
| ---       | ---       | ---       | ---                       |
| `root`    |           |           |                           |
| `ubuntu`  |           |           |                           |
| `BOB`     |           |           |                           |

`madewithsudo.txt`
| Account   | Can View  | Can Edit  | Can Change Permissions    |
| ---       | ---       | ---       | ---                       |
| `root`    |           |           |                           |
| `ubuntu`  |           |           |                           |
| `BOB`     |           |           |                           |

5. Command(s) to modify permissions:
6. How to give user account `sudo`:

## Citations

To add citations, provide the site and a summary of what it assisted you with.  If generative AI was used, include which generative AI system was used and what prompt(s) you fed it.
https://www.redhat.com/en/blog/linux-file-permissions-explained. This assisted me with finding out the meanings to the permissions.
Gemini: 'chmod u=rw,g-w,o-x banana.cabana does what?'
